//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP.NET_start.ProductServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceRef.IProjectServiceOf_ProductContract")]
    public interface IProjectServiceOf_ProductContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/GetAll", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/GetAllResponse")]
        DbModels.DataContracts.ProductContract[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/GetAll", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/GetAllResponse")]
        System.Threading.Tasks.Task<DbModels.DataContracts.ProductContract[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Get", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/GetResponse")]
        DbModels.DataContracts.ProductContract Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Get", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/GetResponse")]
        System.Threading.Tasks.Task<DbModels.DataContracts.ProductContract> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Create", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/CreateResponse")]
        void Create(DbModels.DataContracts.ProductContract item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Create", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(DbModels.DataContracts.ProductContract item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Update", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/UpdateResponse")]
        void Update(DbModels.DataContracts.ProductContract item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Update", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(DbModels.DataContracts.ProductContract item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Delete", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectServiceOf_ProductContract/Delete", ReplyAction="http://tempuri.org/IProjectServiceOf_ProductContract/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectServiceOf_ProductContractChannel : ASP.NET_start.ProductServiceRef.IProjectServiceOf_ProductContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceOf_ProductContractClient : System.ServiceModel.ClientBase<ASP.NET_start.ProductServiceRef.IProjectServiceOf_ProductContract>, ASP.NET_start.ProductServiceRef.IProjectServiceOf_ProductContract {
        
        public ProjectServiceOf_ProductContractClient() {
        }
        
        public ProjectServiceOf_ProductContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceOf_ProductContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceOf_ProductContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceOf_ProductContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DbModels.DataContracts.ProductContract[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<DbModels.DataContracts.ProductContract[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public DbModels.DataContracts.ProductContract Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<DbModels.DataContracts.ProductContract> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public void Create(DbModels.DataContracts.ProductContract item) {
            base.Channel.Create(item);
        }
        
        public System.Threading.Tasks.Task CreateAsync(DbModels.DataContracts.ProductContract item) {
            return base.Channel.CreateAsync(item);
        }
        
        public void Update(DbModels.DataContracts.ProductContract item) {
            base.Channel.Update(item);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(DbModels.DataContracts.ProductContract item) {
            return base.Channel.UpdateAsync(item);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
